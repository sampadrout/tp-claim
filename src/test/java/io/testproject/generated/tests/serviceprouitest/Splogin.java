package io.testproject.generated.tests.serviceprouitest;

import io.testproject.sdk.drivers.ReportingDriver;
import io.testproject.sdk.interfaces.junit5.ExceptionsReporter;
import java.lang.Exception;
import java.lang.Override;
import java.lang.String;
import java.util.concurrent.TimeUnit;
import org.junit.jupiter.api.Assertions;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;

/**
 * This class was automatically generated by TestProject
 * Project: ServicePro_UI_Test
 * Test: SP_Login
 * Generated by: Sampad Rout (srout@cchs.com)
 * Generated on Mon Jun 20 12:05:25 GMT 2022.
 */
public class Splogin implements Test, ExceptionsReporter {
  public static WebDriver driver;

  /**
   * ApplicationURL test parameter
   */
  public String ApplicationURL = "https://servicepartner100-accp.mendixcloud.com/index.html";

  /**
   * Application_URL test parameter
   */
  public String Application_URL = "https://servicepartner100-accp.mendixcloud.com/index.html";

  /**
   * Username test parameter
   */
  public String Username = "sp_auto_preprod2@test.com";

  /**
   * Password test parameter
   */
  public String Password = "New@123_";

  public void execute(WebDriver parentDriver) throws Exception {
    driver = parentDriver;
    // set timeout for driver actions (similar to step timeout)
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);
    By by;
    boolean booleanResult;

    // 1. Navigate to '{{Application_URL}}'
    //    Navigates the specified URL (Auto-generated)
    GeneratedUtils.sleep(500);
    driver.navigate().to(Application_URL);

    // 2. Is 'Sign in' visible?
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(60000, TimeUnit.MILLISECONDS);
    GeneratedUtils.sleep(500);
    by = By.xpath("//a[. = '\n   \n    Sign in\n']");
    driver.findElement(by).isDisplayed();
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 3. Click 'Sign in'
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(60000, TimeUnit.MILLISECONDS);
    GeneratedUtils.sleep(500);
    by = By.xpath("//a[. = '\n   \n    Sign in\n']");
    driver.findElement(by).click();
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 4. Type '{{Username}}' in 'email'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("[id = '1-email']");
    driver.findElement(by).sendKeys(Username);

    // 5. Click 'password'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("[id = '1-password']");
    driver.findElement(by).click();

    // 6. Type '{{Password}}' in 'password'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("[id = '1-password']");
    driver.findElement(by).sendKeys(Password);

    // 7. Click 'LOG IN'
    GeneratedUtils.sleep(500);
    by = By.xpath("//span[. = 'Log In']");
    driver.findElement(by).click();

    // 8. Does 'Service Jobs Dashboard' contain 'Service Jobs Dashboard'?
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(60000, TimeUnit.MILLISECONDS);
    GeneratedUtils.sleep(500);
    by = By.xpath("//h1[. = 'Service Jobs Dashboard']");
    Assertions.assertTrue(driver.findElement(by).getText().contains("Service Jobs Dashboard"));
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

  }

  @Override
  public ReportingDriver getDriver() {
    return (ReportingDriver) driver;
  }
}
